.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "TRICENSUS" "1" "28 May 2012" "" "The Regina Handbook"

.SH NAME
tricensus \- Form a census of 3-manifold triangulations
.SH SYNOPSIS

\fBtricensus\fR [ \fB-t, --tetrahedra=\fItetrahedra\fB\fR ] [ \fB-b, --boundary\fR | \fB-i, --internal\fR | \fB-B, --bdryfaces=\fIfaces\fB\fR ] [ \fB-o, --orientable\fR | \fB-n, --nonorientable\fR ] [ \fB-f, --finite\fR | \fB-d, --ideal\fR ] [ \fB-m, --minimal\fR | \fB-M, --minprime\fR | \fB-N, --minprimep2\fR ] [ \fB-s, --sigs=\fR ] [ \fB-p, --genpairs\fR | \fB-P, --usepairs\fR ] \fB\fIoutput-file\fB\fR


\fBtricensus\fR \fB--help\fR

.SH "DESCRIPTION"
.PP
Forms a census of all 3-manifold triangulations that satisfy
some set of conditions.
.PP
These conditions are specified using various command-line arguments.
The only condition that you \fBmust\fR provide is
the number of
tetrahedra, but there are many other options available.
.PP
Each triangulation will be output precisely once up to combinatorial
isomorphism.  Invalid triangulations (i.e., triangulations with edges
identified to themselves in reverse, or vertices whose links
have boundary but are not discs) will not be output at all.
.PP
As the census progresses, the state of progress will be written (slowly)
to standard output.  Once the census is complete, the full census will
be saved to the given output file.
.PP
You can use the options \fB--genpairs\fR and
\fB--usepairs\fR to split a census into smaller
pieces.  See also
\fBtricensus-mpi\fR,
a more powerful tool that allows you to distribute a census
across a high-performance computing cluster.
.sp
.RS
.B "Caution:"
.PP
A census with even a small number of tetrahedra can
take an incredibly long time to run, and can chew up massive amounts of
memory.  It is recommended that you try very small censuses to begin
with (such as 3 or 4 tetrahedra), and work upwards to establish the
limits of your machine.
.PP
For very large census runs, it is \fBhighly recommended\fR
that you use the \fB--sigs\fR option, which will keep
the output file small and significantly reduce the memory footprint.
.RE
.SH "OPTIONS"
.TP
\fB-t, --tetrahedra=\fItetrahedra\fB\fR
Specifies the number of tetrahedra used to build the triangulations.
.TP
\fB-b, --boundary\fR
Only produce triangulations with at least one boundary face.
.TP
\fB-i, --internal\fR
Only produce triangulations with all faces internal (i.e., with no
boundary faces).
.TP
\fB-B, --bdryfaces=\fIfaces\fB\fR
Only produce triangulations with the precise number of boundary
faces specified.
.TP
\fB-o, --orientable\fR
Only produce orientable triangulations.
.TP
\fB-n, --nonorientable\fR
Only produce non-orientable triangulations.
.TP
\fB-f, --finite\fR
Only produce finite triangulations (triangulations with no
ideal vertices).
.TP
\fB-d, --ideal\fR
Only produce triangulations with at least one ideal vertex.
There might or might not be internal vertices (whose links are
spheres) as well.
.TP
\fB-m, --minimal\fR
Do not include triangulations that are obviously non-minimal.

This option uses a series of fast tests that try to eliminate
non-minimal triangulations, but that are not always conclusive.
If Regina cannot quickly tell whether a triangulation is
non-minimal, it will place the triangulation in the census regardless.
.TP
\fB-M, --minprime\fR
Do not include triangulations that are obviously non-minimal,
non-prime and/or disc-reducible.

This can significantly speed up the census and vastly
reduce the final number of triangulations produced.

As above, this option uses a series of fast tests that are not
always conclusive.
If Regina cannot quickly tell whether a triangulation is
non-minimal, non-prime or disc-reducible, it will place the
triangulation in the census regardless.
.TP
\fB-N, --minprimep2\fR
Do not include triangulations that are obviously non-minimal,
non-prime, P2-reducible and/or disc-reducible.

This can significantly speed up the census and vastly
reduce the final number of triangulations produced,
even more so than \fB--minprime\fR\&.

As above, this option uses a series of fast tests that are not
always conclusive.
If Regina cannot quickly tell whether a triangulation is
non-minimal, non-prime, P2-reducible or disc-reducible, it will place
the triangulation in the census regardless.
.TP
\fB-s, --sigs=\fR
Instead of writing a full Regina data file, just output a list
of isomorphism signatures.

The output file will be a plain text file.  Each line will be a
short string of letters, digits and punctuation that uniquely
encodes a 3-manifold triangulation up to combinatorial isomorphism.
You can import this text file from within Regina by selecting
File->Import->Isomorphism Signature List from the menu.

This option is highly recommended for large census enumerations.
First, the output file will be considerably smaller.
More importantly, the memory footprint of
\fBtricensus\fR will also be much smaller:
triangulations can be written to the output file and forgotten
immediately, instead of being kept in memory to construct a final
Regina data file.
.TP
\fB-p, --genpairs\fR
Only generate face pairings, not triangulations.

The outermost layer of the census code involves pairing off the
faces of individual tetrahedra without determining
the corresponding gluing permutations.  For each face pairing that is
produced, Regina will try many different sets of gluing permutations
and generated the corresponding triangulations.

Face pairing generation consumes a very small fraction of the
total census runtime, and effectively divides the census into
multiple pieces.  This option allows you to quickly generate
a complete list of possible face pairings, so that you can feed subsets
of this list to different machines to work on simultaneously.  You
can coordinate this manually, or you can use
\fBtricensus-mpi\fR
to coordinate it for you on a high-performance cluster.

The list of all face pairings will be written to the given output
file in text format (though you may omit the output file from the
command line, in which case the face pairings will be written to
standard output).
If you are coordinating your sub-censuses manually, you can use
the option \fB--usepairs\fR to generate triangulations
from a subset of these face pairings.

Options for orientability, finiteness or minimality cannot be
used with \fB--genpairs\fR; instead you should use them
later with \fB--usepairs\fR, or pass them to
\fBtricensus-mpi\fR\&.

This option does not come with progress reporting, though
typically it runs fast enough that this does not matter.
You can always track the state of progress by counting lines in
the output file.
.TP
\fB-P, --usepairs\fR
Use only the given subset of face pairings to build the triangulations.

Each face pairing that is processed must be
in canonical form, i.e., must be a minimal representative of its
isomorphism class.  All face pairings generated using
\fB--genpairs\fR are guaranteed to satisfy this condition.

Face pairings should be supplied on standard input, one per line.
They should be listed in the format produced by the option
\fB--genpairs\fR\&.

This option effectively lets you run a subset of a larger census.
See \fB--genpairs\fR for further details on how to split
a census into subsets that can run simultaneously on different machines,
or
\fBtricensus-mpi\fR
which can coordinate this process using MPI on a
high-performance cluster.

Options for tetrahedra or boundary faces cannot be used with
\fB--usepairs\fR; instead you should pass them earlier
along with \fB--genpairs\fR when you split the original
census into pieces.
.SH "EXAMPLES"
.PP
The following command forms a census of all 3-tetrahedron closed
non-orientable triangulations and puts the results in the file
\fIresults.rga\fR\&.  To ensure that triangulations are
closed we use the options \fB-i\fR (no boundary faces)
and \fB-f\fR (no ideal vertices).

.nf
    example$ \fBtricensus -t 3 -nif results.rga\fR
    Starting census generation...
    0:1 0:0 1:0 1:1 | 0:2 0:3 2:0 2:1 | 1:2 1:3 2:3 2:2
    0:1 0:0 1:0 2:0 | 0:2 1:2 1:1 2:1 | 0:3 1:3 2:3 2:2
    0:1 0:0 1:0 2:0 | 0:2 2:1 2:2 2:3 | 0:3 1:1 1:2 1:3
    1:0 1:1 2:0 2:1 | 0:0 0:1 2:2 2:3 | 0:2 0:3 1:2 1:3
    Finished.
    Total triangulations: 5
    example$
.fi
.PP
The following command forms a census of 4-tetrahedron closed
orientable triangulations, where the census creation is optimised
for prime minimal triangulations.  Although all prime minimal
triangulations will be included, there may be some non-prime or
non-minimal triangulations in the census also.

.nf
    example$ \fBtricensus -t 4 -oifM results.rga\fR
    Starting census generation...
    0:1 0:0 1:0 1:1 | 0:2 0:3 2:0 2:1 | 1:2 1:3 3:0 3:1 | 2:2 ...
    0:1 0:0 1:0 1:1 | 0:2 0:3 2:0 3:0 | 1:2 2:2 2:1 3:1 | 1:3 ...
    ...
    1:0 1:1 2:0 3:0 | 0:0 0:1 2:1 3:1 | 0:2 1:2 3:2 3:3 | 0:3 ...
    Finished.
    Total triangulations: 17
    example$
.fi
.PP
The following command generates all face pairings for a
5-tetrahedron census in which all triangulations have precisely two
boundary faces.  The face pairings will be written to
\fIpairings.txt\fR, whereupon they can be broken up
and distributed for processing at a later date.

.nf
    example$ \fBtricensus --genpairs -t 5 -B 2 pairings.txt\fR
    Total face pairings: 118
    example$
.fi
.PP
The face pairings generated in the previous example can then be fleshed
out into a full census of all 3-manifold triangulations with five
tetrahedra, precisely two boundary faces and no ideal vertices as
follows.  The number of tetrahedra and boundary faces were
already specified in the previous command, and cannot be
supplied here.  The face pairings will be read from
\fIpairings.txt\fR, and the final census will be
written to \fIresults.rga\fR\&.

.nf
    example$ \fBtricensus --usepairs -f results.rga < pairings.txt\fR
    Trying face pairings...
    0:1 0:0 1:0 1:1 | 0:2 0:3 2:0 2:1 | 1:2 1:3 3:0 3:1 | 2:2 ...
    0:1 0:0 1:0 1:1 | 0:2 0:3 2:0 2:1 | 1:2 1:3 3:0 3:1 | 2:2 ...
    ...
    ... (running through all 118 face pairings)
    ...
    1:0 2:0 3:0 4:0 | 0:0 2:1 3:1 4:1 | 0:1 1:1 3:2 4:2 | 0:2 ...
    Total triangulations: 5817
    example$
.fi
.SH "MACOS\\~X USERS"
.PP
If you downloaded a drag-and-drop app bundle, this utility is
shipped inside it.  If you dragged Regina to the main
Applications folder, you can run it as
/Applications/Regina.app/Contents/MacOS/tricensus\&.
.SH "WINDOWS USERS"
.PP
The command-line utilities are installed beneath the
\fIProgram\~Files\fR directory; on some
machines this directory is called
\fIProgram\~Files\~(x86)\fR\&.
You can start this utility by running
c:\\Program\~Files\\Regina\\Regina\~4.93\\bin\\tricensus.exe\&.
.SH "SEE ALSO"
.PP
sigcensus,
tricensus-mpi,
regina-gui\&.
.SH "AUTHOR"
.PP
This utility was written by Benjamin Burton <bab@debian.org>\&.
Many people have been involved in the development
of Regina; see the users' handbook for a full list of credits.
