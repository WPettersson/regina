#!/bin/bash
#
# Regina - A Normal Surface Theory Calculator
# Signed Md5sum Generation Utility
#
# Copyright (c) 2002-2011, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Usage: mksums <description> <file> [ <file> ... ]
#
# Creates a GnuPG-signed set of md5sums for the given set of files.
#
# This script should only need to be used by the software author (and is
# specifically tailored for said author's machine and personal details).
#
# Requires: gpg, md5sum, mktemp, sed
# Example: mksums "Regina distribution files" *.tgz
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.
#
set -e

# Details for person doing the GnuPG signing.
signerid="Ben Burton <bab@debian.org>"

# Command-line sanity check.
if [ -z "$1" -o -z "$2" ]; then
  echo "Usage: mksums <description> <file> [ <file> ... ]"
  exit 1
fi

# Extract the description string.
desc="$1"
shift

# Check that the given files exist as regular files.
for i; do
  if [ ! -e "$i" ]; then
    echo "File $i does not exist."
    exit 1
  elif [ ! -f "$i" ]; then
    echo "File $i is not a regular file."
    exit 1
  fi
done

# Create a temporary file to contain the entire md5sum message.
plaintext="`mktemp -t md5sums.XXXXXXXXXX`" || plaintext=
if [ -z "$plaintext" ]; then
  echo "Error creating temporary file."
  exit 1
fi

# Build the md5sum message.
echo > "$plaintext"
echo "Below are md5sums for the $desc available from this site." >> "$plaintext"
echo >> "$plaintext"
md5sum "$@" | sed -e "s/^/  /" >> "$plaintext"

cat >> "$plaintext" <<END

After downloading a file you can verify that it has been neither
corrupted nor tampered with by running:

  md5sum <filename>

and comparing the output with the md5sums listed above.

These md5sums have been signed with my private GnuPG key; the matching
public key is available from any of the pgp.net public keyservers
(e.g., wwwkeys.au.pgp.net).
END
echo >> "$plaintext"
echo " -- $signerid, `822-date`" >> "$plaintext"
echo >> "$plaintext"

# Sign the md5sum message.
cat "$plaintext" | gpg --clearsign

# Clean up.
rm "$plaintext"
